# Generated by Django 4.0.2 on 2022-06-02 11:56

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('browse', '0002_breastcancerpaper_alter_metaboliteinf_table'),
    ]

    operations = [
        migrations.CreateModel(
            name='BreastCancerMet',
            fields=[
                ('metabolite', models.TextField(blank=True, db_column='Metabolite', primary_key=True, serialize=False)),
                ('metabolite_name', models.TextField(blank=True, db_column='metabolite name', null=True)),
                ('metabolite_paper_field', models.TextField(blank=True, db_column='metabolite (paper)', null=True)),
                ('field_metabolite_name_field', models.TextField(blank=True, db_column='(metabolite name)', null=True)),
                ('adduct', models.TextField(blank=True, null=True)),
                ('pubchem_id', models.TextField(blank=True, db_column='PUBCHEM ID', null=True)),
                ('hmdb_id', models.TextField(blank=True, db_column='HMDB ID', null=True)),
                ('average_molecular_weight', models.TextField(blank=True, db_column='Average Molecular Weight', null=True)),
                ('monisotopic_molecular_weight', models.TextField(blank=True, db_column='Monisotopic Molecular Weight', null=True)),
                ('kegg', models.TextField(blank=True, db_column='kegg', null=True)),
                ('pathway', models.TextField(blank=True, db_column='Pathway', null=True)),
                ('sub_pathway', models.TextField(blank=True, db_column='sub-pathway', null=True)),
                ('m_z', models.TextField(blank=True, db_column='M/Z', null=True)),
                ('specimen', models.TextField(blank=True, db_column='Specimen', null=True)),
                ('function', models.TextField(blank=True, null=True)),
                ('participantsn_cancer_type_field', models.TextField(blank=True, db_column='participantsn(cancer type)', null=True)),
                ('stage', models.TextField(blank=True, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('gender_m_text_f_field', models.TextField(blank=True, db_column='gender (M TEXT, F)', null=True)),
                ('age_mean_range_m_f_field', models.TextField(blank=True, db_column='age mean(range) (M / F)', null=True)),
                ('smoking_status', models.TextField(blank=True, db_column='smoking status', null=True)),
                ('participantsn_control_field', models.TextField(blank=True, db_column='participantsn(control)', null=True)),
                ('number_1', models.IntegerField(blank=True, db_column='number.1', null=True)),
                ('gender_m_f_field', models.TextField(blank=True, db_column='gender (M / F)', null=True)),
                ('age_mean_range_m_f_field_0', models.TextField(blank=True, db_column='age mean(range) (M / F).', null=True)),
                ('smoking_status_1', models.TextField(blank=True, db_column='smoking status.1', null=True)),
                ('chromatography', models.TextField(blank=True, db_column='Chromatography', null=True)),
                ('ion_source', models.TextField(blank=True, db_column='Ion source', null=True)),
                ('positive_negative_mode', models.TextField(blank=True, db_column='Positive/Negative mode', null=True)),
                ('mass_analyzer', models.TextField(blank=True, db_column='Mass analyzer', null=True)),
                ('identification_level', models.TextField(blank=True, db_column='Identification level', null=True)),
                ('data_processing_software', models.TextField(blank=True, db_column='Data processing software', null=True)),
                ('database_search', models.TextField(blank=True, db_column='Database search', null=True)),
                ('statistical_software', models.TextField(blank=True, db_column='statistical software', null=True)),
                ('statistical_difference_method', models.TextField(blank=True, db_column='statistical difference method', null=True)),
                ('mean_concentration_case_field', models.TextField(blank=True, db_column='mean concentration (case)', null=True)),
                ('mean_concentration_control_field', models.TextField(blank=True, db_column='mean  concentration (control)', null=True)),
                ('fold_change_n_case_control_field', models.TextField(blank=True, db_column='fold change n(case/ control)', null=True)),
                ('raw_p_value', models.TextField(blank=True, db_column='RAW p-value', null=True)),
                ('fdr', models.TextField(blank=True, db_column='fdr', null=True)),
                ('vip', models.TextField(blank=True, db_column='vip', null=True)),
                ('classification_method', models.TextField(blank=True, db_column='Classification method', null=True)),
                ('cutoff_value', models.TextField(blank=True, db_column='Cutoff value', null=True)),
                ('auroc_95_ci_field', models.TextField(blank=True, db_column='AUROC (95%%CI)', null=True)),
                ('sensitivity_field', models.TextField(blank=True, db_column='Sensitivity (%%)', null=True)),
                ('specificity_field', models.TextField(blank=True, db_column='Specificity (%%)', null=True)),
                ('accuracy_field', models.TextField(blank=True, db_column='Accuracy (%%)', null=True)),
                ('survival_analysis_method', models.TextField(blank=True, db_column='Survival analysis method', null=True)),
                ('time_cut_offs_field', models.TextField(blank=True, db_column='time cut-offs (<=/>)', null=True)),
                ('hr_95_ci_field', models.TextField(blank=True, db_column='HR (95%%CI)', null=True)),
                ('p_value', models.TextField(blank=True, db_column='p-value', null=True)),
                ('fdr_1', models.TextField(blank=True, db_column='FDR.1', null=True)),
                ('country', models.TextField(blank=True, db_column='Country', null=True)),
                ('author_emphasized_biomarkers', models.TextField(blank=True, db_column='author-emphasized biomarkers', null=True)),
                ('other_information', models.TextField(blank=True, db_column='other information', null=True)),
                ('pubmed_id', models.IntegerField(blank=True, db_column='Pubmed ID', null=True)),
                ('authors', models.TextField(blank=True, db_column='Authors', null=True)),
            ],
            options={
                'db_table': 'breat_cancer_met',
                'managed': False,
            },
        ),
    ]
